==> ANALYSIS OF Task0.py
time complexity is O(1).
Reason:- Because there are only two print statements this means that printing two lines will take a constant
	 time i.e O(1)

==> ANALYSIS OF Task1.py
time complexity is O(n).
Reason:- Because there are two for loops iterating n times but as 2 is constant we can ignore it.
	 i.e. O(2n) = O(n).

==> ANALYSIS OF Task2.py
time complexity is O(n).
Reason:- Because there are two for loops iterating n times but as 2 is constant we can ignore it.
	 i.e. O(2n) = O(n).

==>ANALYSIS OF Task3.py
worst time complexity is O(nlogn).
Reason:- As the time complexity of O(nlogn) ['sorting'] > O(n) ['for loops'] ,I considered upper bound for worst case.

==>ANALYSIS OF Task4.py
time complexity is O(nlogn).
Reason:- As the time complexity of O(nlogn) ['sorting'] > O(n) ['for loops'] ,I considered upper bound for worst case.
